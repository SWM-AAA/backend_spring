logging:
  level:
    # root: DEBUG
    org:
      springframework:
        web : DEBUG
        test : DEBUG
        jdbc : DEBUG
      hibernate:
        SQL: DEBUG
        tool:
          schema: DEBUG
spring:
  rabbitmq:
    username: test
    password: test
    host: localhost
    port: 5672
  datasource:
    url: jdbc:postgresql://localhost:${POSTGRESQL_PORT}/${DB_NAME}
    username: ${POSTGRESQL_LOCAL_USERNAME}
    password: ${POSTGRESQL_LOCAL_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      jakarta:
        persistence:
          sharedCache:
            mode: ENABLE_SELECTIVE
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  data:
    redis:
      host: localhost
      port: ${REDIS_PORT}
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_LOGIN_CLIENT_ID}
            client-secret: ${GOOGLE_LOGIN_CLIENT_SECRET}
            redirect-uri: https://d2e7-125-177-98-67.ngrok-free.app/login/oauth2/code/google
            scope: profile

          kakao:
            client-id: ${KAKAO_LOGIN_CLIENT_ID}
            client-secret: ${KAKAO_LOGIN_CLIENT_SECRET}
            # redirect-uri: http://localhost:8080/login/oauth2/code/kakao
            redirect-uri: https://d2e7-125-177-98-67.ngrok-free.app/login/oauth2/code/kakao
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            scope: profile_nickname, profile_image
            client-name: Kakao

        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
jwt:
  secretKey: ${JWT_SECRETKEY}

  access:
    expiration: ${JWT_ACCESS_EXPIRATION}
    header: ${JWT_ACCESS_HEADER}
    accesstoken_name : ${JWT_ACCESS_TOKEN_NAME}

  refresh:
    expiration: ${JWT_REFRESH_EXPIRATION}
    header: ${JWT_REFRESH_HEADER}
    refreshtoken_name : ${JWT_REFRESH_TOKEN_NAME}
cloud:
  aws:
    s3:
      bucket: ${S3_BUCKET}
    credentials:
      access-key: ${S3_ACCESS_KEY}
      secret-key: ${S3_SECRET_KEY}
    region:
      static: ${S3_REGION}
      auto: false
    stack:
      auto: false